{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "txHash": "0xf70224bdf7b6c42bd8c078522f426b33596508ccf6032e9f45fc82428eced459"
  },
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x280f6b22bcd2d820b9d83d53bc1700368589d2ca6d4c15183c75cd5e9d7b4832",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x15ef9473613b98689a12d25d79fefd09d3447e99f195966f0444d598b8873336",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x6759c776ce15af6847257c5f4c7b661a436ebd418b9cd0158da006eb8987ada5",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x05f0987c0ca2b28d0a2f55b2932aacfa01cc63fe73fc2ffe5e83682e6240f344",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x92ed4d977c10f0ac8bdd908f4bba2c8682aa30dcbd7fe1b7217a0173c9ac7e41",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x653bec212a8754a8a46c2642ffaf5c16929cfcb08575d813dac523ee29e2289b",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x69301b0e45d4372ff55dcffbafb11d31a50f0890ae4590b0225fddebd69d1eec",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xceea76c77c2b0042b31482171937db77bde971200f94240d78032ed0038c751f",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xd2f120aba1aa04929f591a5d31bb9efc7913044e26d9233d3e584ddc86d86fcc",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x907fa4f39e6136b1f9ef9d2c0014fbfdc654d23fe1573476170e2f44f55e9f94",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0xe9ccd23c47962ad257acf5296189d3a09f42d1ace29268b4471082c02f51bfcb",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xbfa9e130c080a0095787605026592945ceb4850e5b9c865f5ab6d1ba2b5c6afc",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x511da3c8ecf358945d007f06dfc64c9c57e31932642a4e339a472b414667258e",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x5e9e3f930a0b80e4823365d386576c0423ae31b74628c59c1a858befa98f7c8e",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x1c5fc2742bdb52ea297bdfb9a0048f00053d1c9711dcaa3d130628d68ca9cde8",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x2a6a2657bd98546de5bacfbc23fae1e01221a3bbd456ada5e0023e3543b0f129",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x56ce4bea02f51f7c6aa974e12452283878e715d22b91143e960d22a3c272d0d3",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x376d8d89f51a6415cb54a3da9916379db05a29f0380cb79b98702cbf79457f13",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xfe8ee9819b2249c1f40ec08054618f67dfc8c55c3e56c24fa81a34a20fd79d10",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x2152f7908f18a83940f2a74da9f9f0138ec6112ff5e040887396b0f327c254c4",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0xdb3d5c031a951f622c25ea6c64f76f1f3f3d55d648f076b688c9b6503915563e",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x2bf3f24a5bb4c909c3d10e113a1f93e08ea39e15d5c55b2a9fc9e8c6f086c0d6",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0xc077932f53e1d3598a20ffd3c4cb9db2a4a879f0855ad4c886f19d90919d73a4",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xc4bbb9f13202d687dea06e45de6ba8f0eb70f2c80d6e27816b969d2e0b8b77db",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0xfafcd0919ea124d52528848cd3c991cd9512c8ae4172a9abcd78e4fde033f97f",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0x8c97cf190c63067dd896101afe429ec80deb9033f8ee995810f73feeb6d543fc",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x36e4bdabf35235dcaa06e37e7b31068a50c153a27f926bc2c48e27e15bbcc9f5",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x21fc6b9a77af4385ba80528e1729cd81af2f7cda860406703458858ce274c644",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xd96be6172514ecf9c9f62154959bf595c3d8fc926439498069f5fa411763e151",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x6b53b9596e6de0d0f5adbc30bc33524e5ef75c6133fe5a09de6332daf5bb695a",
      "kind": "transparent"
    },
    {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0xdbc95a1a1566765572436e4b6322fb9c82b30b767a57af40913c17417ccbc6e5",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0x4edfbd19818679122ae94be696f25f7c9b83fbabd143f04b9e75ed8513c59494",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0x1c708debb62a39d160f6cb22ef4a7a0087a275f6a9600a96558257155ea7df4f",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0xb71db42cf366fcd60555ab1edc9dc1affccef49ba083df1773481d371a2b5c15",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0x00a30727a7ace1def4fe6f2af671298acce4504721011edfaa323892b25a543d",
      "kind": "transparent"
    },
    {
      "address": "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "txHash": "0xbb199ba6989adef0c4c7ec069dcf1e93dad0f963b4da5dc68e9e66fe0c58b111",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0xc8f97fec5551c76998c284c45d118c9cfd82a0299a3e4ea2b3a69bfa2dd6fce3",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x5601743741cd75e03d2f752b70e4161a1f336efe3278a2a56b58f1e191806170",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0x97e200c62aef21fc109b6eff37e6b17e3385c84a41ab67549a1ac3110e3c17d1",
      "kind": "transparent"
    },
    {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0x0888f0a14bea1e290fc11b8afc76294db206f9c75f6e2898ed6440ab700b89db",
      "kind": "transparent"
    },
    {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0x7f5e37bb2f0f7cf3ace3d7cba4dbc2db193a9acf41076dcfd43a94dadc579d11",
      "kind": "transparent"
    },
    {
      "address": "0xF8e31cb472bc70500f08Cd84917E5A1912Ec8397",
      "txHash": "0xe12f2dd5adfff17073d5870f9bba27b2f191fd4eab38b45e444db24887550fdb",
      "kind": "transparent"
    },
    {
      "address": "0xc0F115A19107322cFBf1cDBC7ea011C19EbDB4F8",
      "txHash": "0x612e5267f35e52bc36a13f23c24119d82cff9f91b0dfd4f9d33afbf95b7fe256",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0xd06c47491491d1ed186b4174e0ebb855e99ae295c14c77afdf2a403816d9de59",
      "kind": "transparent"
    },
    {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0x7361d59aeeb2547c1a6525233e81f53f8ea551285ff00339edfd32a23e4f2581",
      "kind": "transparent"
    },
    {
      "address": "0x07882Ae1ecB7429a84f1D53048d35c4bB2056877",
      "txHash": "0xcb3283e745d2683312cd297e4ea43acb84b51a5b2b6dd98099883418b1f8ff21",
      "kind": "transparent"
    },
    {
      "address": "0x22753E4264FDDc6181dc7cce468904A80a363E44",
      "txHash": "0x1f2200ceb603986206556d1bdd84c92391278ac0e1b13b3d9cf1920fe04bba8f",
      "kind": "transparent"
    },
    {
      "address": "0xA7c59f010700930003b33aB25a7a0679C860f29c",
      "txHash": "0xf8f8ec5e4521adcabf73a8b4357daadee5e4a72f65639389e573ee8cf83f9a53",
      "kind": "transparent"
    },
    {
      "address": "0xfaAddC93baf78e89DCf37bA67943E1bE8F37Bb8c",
      "txHash": "0x17cdf7be509c5ad16de31f60fdbe5294a244076e8a2ab6a7b0de73bfb597ddd7",
      "kind": "transparent"
    },
    {
      "address": "0x40918Ba7f132E0aCba2CE4de4c4baF9BD2D7D849",
      "txHash": "0x84acd98b86a2612f79d11ab72c47b10509abe69ff80a77ba5b4fab5451c9d6c2",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0x8daedf4f02796c29672ee5618966153ad0fc15a18ed302df87a2a8ee28b90f54",
      "kind": "transparent"
    },
    {
      "address": "0x02df3a3F960393F5B349E40A599FEda91a7cc1A7",
      "txHash": "0x2483f5bb53bd18b441beddc0a6974c2bf332fffb75b1c72c65576cba440d650b",
      "kind": "transparent"
    },
    {
      "address": "0x1780bCf4103D3F501463AD3414c7f4b654bb7aFd",
      "txHash": "0xf5877d5974f951f1681c58de0c6347fa8545a9a774aaccb203a39696f0c19c81",
      "kind": "transparent"
    },
    {
      "address": "0x71089Ba41e478702e1904692385Be3972B2cBf9e",
      "txHash": "0x1267ad7408853cc82c6a78cda257dfc8df2d15e58aa21649068e551b5ed327e1",
      "kind": "transparent"
    },
    {
      "address": "0xC66AB83418C20A65C3f8e83B3d11c8C3a6097b6F",
      "txHash": "0x9358a128fda0f6c046c67f64d701cc3f329888ef4d93d66bd097adb75984ec40",
      "kind": "transparent"
    },
    {
      "address": "0xeF31027350Be2c7439C1b0BE022d49421488b72C",
      "txHash": "0x4afc77376f79d7a7cd5214e11d6688801a16686f33110928000543264d3bffed",
      "kind": "transparent"
    },
    {
      "address": "0xaC47e91215fb80462139756f43438402998E4A3a",
      "txHash": "0x38a0c762242c13520ecad6faad6d3cc23f2e94508749d67fe09d6e9b78947546",
      "kind": "transparent"
    },
    {
      "address": "0x9BcC604D4381C5b0Ad12Ff3Bf32bEdE063416BC7",
      "txHash": "0xcb51725f1680081fd74cc9103a982cf82ea5d7617863fe5b92bcc8b109ee4493",
      "kind": "transparent"
    },
    {
      "address": "0xdFdE6B33f13de2CA1A75A6F7169f50541B14f75b",
      "txHash": "0x1a6f1810ce2d523a48a114ed1b45bdf6b9de6d4747838b397c4b420161932401",
      "kind": "transparent"
    },
    {
      "address": "0x38A70c040CA5F5439ad52d0e821063b0EC0B52b6",
      "txHash": "0x13a0f5d926e883342777fbb071ee076ed632684567ace52b99b3c5530033a9e4",
      "kind": "transparent"
    },
    {
      "address": "0x871ACbEabBaf8Bed65c22ba7132beCFaBf8c27B5",
      "txHash": "0x36e90556e8d3eaa78e46f66542c3c7298f60b48422f20dc853b1169a8f0f49a4",
      "kind": "transparent"
    },
    {
      "address": "0x12456Fa31e57F91B70629c1196337074c966492a",
      "txHash": "0x4d5513337bd7156ce86b2c666c59dd83c32a54a87cd7f468ffc9cdd9adba3f58",
      "kind": "transparent"
    },
    {
      "address": "0xce830DA8667097BB491A70da268b76a081211814",
      "txHash": "0xfcc0d45ee109a5fd279c3567a2c84f9d22f201acc7d7dbfe8e165cb5c2abf9d4",
      "kind": "transparent"
    },
    {
      "address": "0xD5bFeBDce5c91413E41cc7B24C8402c59A344f7c",
      "txHash": "0xf4c4ec0ecce8589127f045b73a46824657d317f5d72a5f44d9144630d0511be1",
      "kind": "transparent"
    },
    {
      "address": "0x77AD263Cd578045105FBFC88A477CAd808d39Cf6",
      "txHash": "0xafe50c4c54bb31025c64ce588abcb17e39d8fb5a9a12e448703dd1ae7fab0b4b",
      "kind": "transparent"
    },
    {
      "address": "0x38628490c3043E5D0bbB26d5a0a62fC77342e9d5",
      "txHash": "0x6ed0299e411aa7ad91bdf918010cf0a527377cdde27668d21366f52cb2d6c14b",
      "kind": "transparent"
    },
    {
      "address": "0x05bB67cB592C1753425192bF8f34b95ca8649f09",
      "txHash": "0xe0dbd8be8755bb7be1f1823f8c4ffc8dfa16d554a8e2a9f53e0524f8be6b4d38",
      "kind": "transparent"
    },
    {
      "address": "0xa85EffB2658CFd81e0B1AaD4f2364CdBCd89F3a1",
      "txHash": "0x73553dc5dadb841948c5853d43c92c0147498ebd5a26286a1a2971d3d45ae430",
      "kind": "transparent"
    },
    {
      "address": "0x8aAC5570d54306Bb395bf2385ad327b7b706016b",
      "txHash": "0xab1bece11e128953e68043e4df56e8c87475353f315361aa798322a98d33514c",
      "kind": "transparent"
    },
    {
      "address": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
      "txHash": "0x7ee1a90f1304e1f8a4393851d0e934de6680b7ba8142f26baebde8ba23fffe7a",
      "kind": "transparent"
    },
    {
      "address": "0x1757a98c1333B9dc8D408b194B2279b5AFDF70Cc",
      "txHash": "0x787e4a4b11fb8a72680683e66bdba10e04b878cbaabc55298c3a830d586aaf78",
      "kind": "transparent"
    },
    {
      "address": "0x24EcC5E6EaA700368B8FAC259d3fBD045f695A08",
      "txHash": "0x368bd0e0f8f3c1a8383deaff7d198b566048671ced6d5b9e5abed5d3791aa817",
      "kind": "transparent"
    },
    {
      "address": "0x11632F9766Ee9d9317F95562a6bD529652ead78f",
      "txHash": "0x4b1813f88e8722e03df23f93b0dff3c193ba2d8d5a617252727af0765302a529",
      "kind": "transparent"
    },
    {
      "address": "0x0dEe24C99e8dF7f0E058F4F48f228CC07DB704Fc",
      "txHash": "0x4215aced6ac07bc6e1d7974d905bd0aa9cab8b5819e306cd56fb33e80c0ec2f6",
      "kind": "transparent"
    },
    {
      "address": "0xCC5Bc84C3FDbcF262AaDD9F76652D6784293dD9e",
      "txHash": "0x8132d1f96096b30ad353f278122fff65a4789fbb08c4b269a7ba049dd8babb02",
      "kind": "transparent"
    },
    {
      "address": "0x04F75a27cE2FDC591C71a88f1EcaC7e5Ce44f5Fc",
      "txHash": "0xdc4f8686c52e3d76c8d15ccdb488b602dcead0c802cd2534e28a9bb34c21e77e",
      "kind": "transparent"
    },
    {
      "address": "0x93B800CD7ACdcA13754624D4B1A2760A86bE0D1f",
      "txHash": "0x9635d7588c503fe0dcea198d5c06556cd3421f494f8385d39e9b1af36291ace1",
      "kind": "transparent"
    },
    {
      "address": "0x3Af511B1bdD6A0377e23796aD6B7391d8De68636",
      "txHash": "0x585ba4f9d86b49382d3d6c80d82d0ce458fc1c5ca03747ea45c3bd46cf5c718c",
      "kind": "transparent"
    },
    {
      "address": "0x10537D7bD661C9c34F547b38EC662D6FD482Ae95",
      "txHash": "0x2aa348871c1dcbf1b301257650ae47eb6921ca080012c1487a517c6b4978093d",
      "kind": "transparent"
    },
    {
      "address": "0xfb6dAB6200b8958C2655C3747708F82243d3F32E",
      "txHash": "0x89e4cb7a29a77c150275e435ae78af164678f67db5394e51ff47bc692b128e0d",
      "kind": "transparent"
    },
    {
      "address": "0x798f111c92E38F102931F34D1e0ea7e671BDBE31",
      "txHash": "0xf3387ffb29f6a820e288b549b4c6743fa3916191033d11c67e1e10da5641ecc7",
      "kind": "transparent"
    },
    {
      "address": "0xf42Ec71A4440F5e9871C643696DD6Dc9a38911F8",
      "txHash": "0x8270d04834c025f633f2ae3c43d41d08ac6f49707291c910ecab543e03e52f68",
      "kind": "transparent"
    },
    {
      "address": "0xD73bAb8F06DB28c87932571f87D0D2C0FDF13D94",
      "txHash": "0x262b86ed04f7d82ee0ea3a656db4677905dc6409fae0d80dd97a3f5721ec4af3",
      "kind": "transparent"
    },
    {
      "address": "0x0dEC227f56AC4D342F041D486aa60742D4BdC483",
      "txHash": "0x3cee41d70402f0ec25e9cba5a4ff67b4d730430a11c64513621cb4c9d88eacf9",
      "kind": "transparent"
    },
    {
      "address": "0x0BFC626B583e93A5F793Bc2cAa195BDBB2ED9F20",
      "txHash": "0xc6d9c30ffd6fa183a184a69ed8cf15b518f395a32dc4157c670e146b3c94d636",
      "kind": "transparent"
    },
    {
      "address": "0x76d05F58D14c0838EC630C8140eDC5aB7CD159Dc",
      "txHash": "0x2a683e692a1d212b8d5a8b00dd092bd242b244e9399150a0a81fff6c3c132a03",
      "kind": "transparent"
    },
    {
      "address": "0x36B81ebd01C31643BAF132240C8Bc6874B329c4C",
      "txHash": "0xe2842ec0372958befc9ef7af4f5bf02645cdefcbadbd2588777825f54b06cd0a",
      "kind": "transparent"
    },
    {
      "address": "0x37453c92a0E3C63949ba340ee213c6C97931F96D",
      "txHash": "0x78654a81aafc38bd2289bd78e47838ef398483581c68df9b1a6d2d7bda0422b9",
      "kind": "transparent"
    },
    {
      "address": "0x4Bd915C3e39cfF4eac842255965E79061c38cACD",
      "txHash": "0xa189e06c97f5da3d53ddb66d3d24ce0092366941ba995b44ecf9a06d813e1710",
      "kind": "transparent"
    },
    {
      "address": "0xCd9BC6cE45194398d12e27e1333D5e1d783104dD",
      "txHash": "0x1046c4befeb81e501447d358ff5d7399d6a74cf51831f3d63aa318d55b508245",
      "kind": "transparent"
    },
    {
      "address": "0xE634d83f8E016B04e51F2516e6086b5f238675C7",
      "txHash": "0x037928846e39d9d5d7940c70e7ae1b997fdd8d1b0e7c82422f994772e6ed1168",
      "kind": "transparent"
    },
    {
      "address": "0x8dF2a20225a5577fB173271c3777CF45305e816d",
      "txHash": "0x1d6ec13bc8c28701f3ef6fbe7676408823799e386bf6eb9a9bfc04adb7d7e10f",
      "kind": "transparent"
    },
    {
      "address": "0x226A19c076a3047a53e5430B14bcDB42dbccA159",
      "txHash": "0xbee2eea409dd6dfb7184854d63d8eafe9bc6e95fee3f5d56ba012ede4a127d63",
      "kind": "transparent"
    },
    {
      "address": "0x50cf1849e32E6A17bBFF6B1Aa8b1F7B479Ad6C12",
      "txHash": "0xa457167c652774d833bc93ea1d139b70255aef508d31f2462c80ad413d16dad3",
      "kind": "transparent"
    },
    {
      "address": "0x2B8F5e69C35c1Aff4CCc71458CA26c2F313c3ed3",
      "txHash": "0x2f6c3731fe97bf68d11fe4039293a7bd99c71e473e75ae247ffce11412bd8abb",
      "kind": "transparent"
    },
    {
      "address": "0x364C7188028348566E38D762f6095741c49f492B",
      "txHash": "0xd60c02a8314ef39cb686d95636cfdcef1dbe98784dc440c09d02882663ee04a0",
      "kind": "transparent"
    },
    {
      "address": "0xF2cb3cfA36Bfb95E0FD855C1b41Ab19c517FcDB9",
      "txHash": "0xb4bbf6c15799f093e64b40a4c83cee481fbf07260459b8e92488fcf6d79e5e8a",
      "kind": "transparent"
    },
    {
      "address": "0xAB8Eb9F37bD460dF99b11767aa843a8F27FB7A6e",
      "txHash": "0x57a12a1bac09656b7f7354cc3aa5b08e73c0f62ce1b2b0fc427df4a45b89bf0e",
      "kind": "transparent"
    },
    {
      "address": "0x205Cfc23ef26922E116135500abb4B12Ab6d4668",
      "txHash": "0x9e3015fad2d38464a85b528901d0de9f8e29b014b5db3aa5361c30ab06977ff6",
      "kind": "transparent"
    },
    {
      "address": "0xD69BC314bdaa329EB18F36E4897D96A3A48C3eeF",
      "txHash": "0xebcdd0539048139427114d1a9ff39b3af283a7d154ac8d6afefca2ecba2a775b",
      "kind": "transparent"
    },
    {
      "address": "0x6712008CCD96751d586FdBa0DEf5495E0E22D904",
      "txHash": "0xa9032f7156942c451458c49c3b5b91feb370efb398c29d8d79f6dc21f846de31",
      "kind": "transparent"
    },
    {
      "address": "0x1f9c84B161b2c7FFB540BC5354543108cCE37df1",
      "txHash": "0xfb35186f75a81a734094b97827144be6fffcfaf063766b9e85afee8829b6d37d",
      "kind": "transparent"
    },
    {
      "address": "0x4D1338Fa46ca6060F1472b70599cc635Ad275EDa",
      "txHash": "0xa571ada9451d89edc746f804e6fe94451bd8d68010290f873dcca2ca6929e008",
      "kind": "transparent"
    },
    {
      "address": "0x53E4DAFF2073f848DC3F7a8D7CC95b3607212A73",
      "txHash": "0x346d84588794b627cc5af77fb9c5dcaf1386b5210fca05e2b24ae68946e1720b",
      "kind": "transparent"
    },
    {
      "address": "0x52c9dE743a250a4D8E1194E11e447bb45324436f",
      "txHash": "0x480b2975416ec21431b38dff1598b1da716c9e07aaa37d8c7761b56115163115",
      "kind": "transparent"
    },
    {
      "address": "0x7C4BDA48bd4C9ac4FbcC60deEb66bf80d35705f0",
      "txHash": "0x5207c58a961ff45657df80f2c3f6d058579a56f4bd00790404bb1f1ae524231e",
      "kind": "transparent"
    },
    {
      "address": "0xDf66AB853Fc112Ec955531bd76E9079db30A0e27",
      "txHash": "0xb7751c8af1d09a7f9a667e79293b49301df14cbbd53665c2c03f7bca5aa088ed",
      "kind": "transparent"
    },
    {
      "address": "0x012D720e7d2E84b24b68989e0f4aD824fE5B294C",
      "txHash": "0x18a5f6e8a000331d1348afe6be2aacdf6da6615c39b3cab09cd818c9ff2cb98b",
      "kind": "transparent"
    },
    {
      "address": "0x886a2A3ABF5B79AA5dFF1C73016BD07CFc817e04",
      "txHash": "0x62527889d8635cde847d7dc36b355b415d951d58aaeb6ac4e311c503af29b408",
      "kind": "transparent"
    },
    {
      "address": "0xC6A09F78CfB85275e5261200442b0B9AA9D4D0ce",
      "txHash": "0x5ae86e43843f5f030dfa45bfe0eb56965e33ea0a8e9a453f7e19250d9adb3ca2",
      "kind": "transparent"
    },
    {
      "address": "0x2C56932223cdE0D363266f1308c48Ff1BF9F9041",
      "txHash": "0x58aea8643283bf18b152146f7f2b0c009d0f6d4c6e8afc5fcc7551b9aec68060",
      "kind": "transparent"
    },
    {
      "address": "0x676F5F71DAE1C83Dc31775E4c61212bC9e799d9C",
      "txHash": "0xd1764fc39cc58a36121cd305cbd913cc2db54ebdbbe62ef7232dc7111c976e88",
      "kind": "transparent"
    },
    {
      "address": "0xD6b8Eb34413f07a1a67A469345cFEa6633efd58d",
      "txHash": "0xd92f66450d4bd7eb7e240657a9d8a4b6344635d2be472e46a40835b092a9fd6c",
      "kind": "transparent"
    },
    {
      "address": "0x88D3CAaD49fC2e8E38C812c5f4ACdd0a8B065F66",
      "txHash": "0xaf07f1a6cac39e383f7edc44ca593dc59320833149b41ab465bfbdd9cf2562e2",
      "kind": "transparent"
    },
    {
      "address": "0xAf7868a9BB72E16B930D50636519038d7F057470",
      "txHash": "0xc7e42b4df5246dd133218280b8d93411acc81d592631674ced05cb9bd660ec0c",
      "kind": "transparent"
    },
    {
      "address": "0x56cB5406C23d0fb16EaC535D6108CA72980c8072",
      "txHash": "0xa989a17a899f10568548e123a2f1abf44ad514c3d30618b7d7c2825c618b32a3",
      "kind": "transparent"
    },
    {
      "address": "0x566be608Fe7e9f23c9337004cfB60877810E6d28",
      "txHash": "0x65f0a52ab70ff421d2f445070f4ff0f815ea5aceaccd6020a21085098aeb18b7",
      "kind": "transparent"
    },
    {
      "address": "0x47330D2fe6F75899597C14d615003Ef561B01B14",
      "txHash": "0xbba8a749761679ace69318b679f1250b9da1d1a434f99fd44ca4573997c71227",
      "kind": "transparent"
    },
    {
      "address": "0xEe170eFF1BCeA1f7a46F46634fa40d590AAa5200",
      "txHash": "0x484c5fe110d868e33640f87f9a89a662296f4c087d0591fcb59ebb4bd019dcd5",
      "kind": "transparent"
    },
    {
      "address": "0xd6A0A8E18934Bb04eb1787De1C7bD48013579935",
      "txHash": "0xeb41f6aa06fcc9ebce800b8c392efad0ba4621f44ee5cfc6fa0b2244a547758f",
      "kind": "transparent"
    },
    {
      "address": "0x263f307a067B559972302ED69A68f7a2FfBb7639",
      "txHash": "0xa9450093243dc293ec922c6868b923f1a2ab74d56c92ce2d8ec4786ca4595481",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7467b10a350feafba1bd43e617907f394c8ad94d2205341a2b60257cfa63dfde": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x537592191fe34d8bde60bca4862caa58921ce1c91712872010a7b3ad31dbfc03",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:36"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:37"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:38"
          },
          {
            "label": "unitType",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:40"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:43"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:45"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:47"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeBase",
            "src": "contracts/SCPNSTypeBase.sol:218"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeComputility",
            "src": "contracts/SCPNSTypeComputility.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeComputility",
            "src": "contracts/SCPNSTypeComputility.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1740_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1465_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1465_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "19c6ccdfe2283fb0ad024c5270001427d7808376fb5620156d5741ce5bd57498": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xc389627df129cbb01ab5e3cf3f25ad25b30f6756bac82804a6380bd18d0832ec",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:18"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:19"
          },
          {
            "label": "_hosts",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:25"
          },
          {
            "label": "_exists",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:26"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:27"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:28"
          },
          {
            "label": "_count",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:135"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f26d699c02e41146524c692bede1fb5645ce28963cd08e2d8c157f1f0683d30c": {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0xb4dac4532b3dc51a2bcf90023ce2960c211c6cf4e23c273a881690be49438429",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:36"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:37"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:38"
          },
          {
            "label": "unitType",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:40"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:43"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:45"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:47"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:218"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUnitGpu",
            "src": "contracts/SCPNSUnitGpu.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1740_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1465_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1465_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "595a1fc231167601280f67d712a68f02912752a70f03d2271cbdcb08ebb4abee": {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x25d569eec4934235cb44efafa89e1251d95560962b45a971a0785f843e2fcaf7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:36"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:37"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:38"
          },
          {
            "label": "unitType",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:40"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:43"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:45"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:47"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUnitBase",
            "src": "contracts/SCPNSUnitBase.sol:218"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:31"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:33"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "311",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1740_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1740_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1465_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1465_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0bbe48c9371d06b44459ac8f8461042aff64b54daa771ea1416871a7fb72b523": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xd54cff3e8003d64b23e014da884979a9b2e659d77a4f38f7e4aa0d1bec381272",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)3758_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "typeUnitAddr",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:31"
          },
          {
            "label": "computilityVMAddr",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:32"
          },
          {
            "label": "_typeUnitIf",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ISCPNSTypeUnit)9817",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:34"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:58"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:60"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "516",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:229"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSTypeUnit)9817": {
            "label": "contract ISCPNSTypeUnit",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)3758_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ce5928db00be1e87be6147b885b97695a9002d54133885942b6c8728b8296f31": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xdf60f6b4c005ca9771c2d9f165519544c68e9ecb974e8eaab416f93283a8049b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:215"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10344",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:209"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10344": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "aadeb1267f981e3fe4950f3ab93946a118fcc9971c47cad389fb8aba45c2bbf4": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xa532183a263791941cacbcb98a044987c3d09a9bfaf509ded255921e7e877011",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:209"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "742d45680382d2abc216fedf3006c568e044e89116ead340fa8e424664ba0480": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xdbba86f2dc0e8acc12789348431694a4ec6c98374fb08373b80f37e2697d7bd0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1736f36dd1a376c3340595237ed9d111759bd3869d4f24dbb49b79362d2babfe": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xdc9394a640cbdbfa0002cbe2412568fd29410bf4dee1c993f38b3007119bf631",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10460_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10477_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:241"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10465": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10452": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10477_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10460_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10477_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10465",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10460_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10452",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c6cd55673a65558ccb133ad1eb5734a4f0b0c9b9db756486d6be07f7ce5630d7": {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xbb1fa0c2070b8ceab0ad595c3b0da6d9ad6a6d2a1f076965f57c97f106182a74",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6f8e07f4b47bb30fd8d86b2c4c2b7cc7d9df97fafd98f31f5e4dec97062cf8f2": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x34ee086830e0ff7788182d944c1091be368eaba6e0325c1977ece55ba86675ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:23"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:24"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:26"
          },
          {
            "label": "_lastBlockNumber",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:27"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:29"
          },
          {
            "label": "_senderIndex",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_struct(Counter)2602_storage)",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2602_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1398138372587939d0f4e05c7524f899ab060663b7301ac03d0f43384e27c286": {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xb9e985b60d45772a8cdd05681b0607bd1cfe64e68b6c7eff9851ef396952e68b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a890f3e457ce10f00217f5ae3fd2f235d22bad492495496bd7bfbd49d7e16807": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xa3d20498a9496a896fa4e5c8f8512acb2683ceb82d854b20ad2150f8cef477e2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "851151139b0361e38bba7fdf9d8445a989b5896a46dbba7645ad742113059f07": {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0x18230cec72443769f91146e4c863fcef603198929c2d3ea63daa3a20b5eb3c59",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_typeUnitId2Id",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:159"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7fc3f1e7d03acb4299970682b2168278b546760d2a7d9a5285b54b5f8b32c42f": {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0xd83b5ab8058fd7e761a91acf1a37861a5f03ce6f4fc608d3fd9f1cef3b5e7668",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:212"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10326",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10326": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6f361cfcc3428489e7c06522a8eea581b9633b0d7eab2f0144657e8f49339082": {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x1cabfdc2f3670cdbd08974a1fc0cd4483c96799e386184cbea5c6ed79cd83a40",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:209"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5fa12a405f57d0550083ee4ea71013aad42d83f9398057623c61e05b41ef89ba": {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xfe8517705ca4e2f66a74809fc837e50baf672911cc8cde870a4de67ba672a538",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "24728a64549123dd41484228fdfff5e61e067faf900c05e85cce9855363198a9": {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x67465aa4dfe615a3c610e3a05f7de14b142cfe4209b49a1a4aa3d5cf39c3fa2e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10506_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10523_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:241"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10511": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10498": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10523_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10506_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10523_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10511",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10506_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10498",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "2afefee88bf338d323b40b4de8467d8607af031fabb0427a44b5a3888d4eef2e": {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xb06a762f8a68b6c3624aada724019a14257d02a932c926aae0e7adfc735a5368",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "33efba23b6eb6e462df778499e2791995b83bd38ffa3341248d3c3167a2ee3a7": {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x746278f18f352e8408159cb74867def9f6e43b942a890f471a718251b7492827",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a4d1fd582517094357d021ad2e702e7b443810fd6470b93c736039e01d969ead": {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xe5efa69da021883748f3fb04ccdf3894abf2a4e2c02d4da13910ce5dc52ed387",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_typeUnitId2Id",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:159"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a876a8f7e4e112955f6f0ba7f02d234575c146ce29a7bda5a20c146101707a6e": {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x96a36fe9673f6bb734c85975e5546c4fdbd741bce661f713c4ca0693c7c0a861",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "2a50da187f5ea6b19303c69f649e21708c27f2b4044c3b607973e3b6323486d8": {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x56ffbde314350f73bf5e4b88630c5a68d98cefbb33b2bfdd33af838c76fdb1e3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:209"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "07c0fd88c939cd82182f1befafdfa1345bd58527989e0869c61677eaf69fb3ca": {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0xabd2cba3f5d6571e88ca54adf2bb173e13aa0f9a60cffb8b7f60431433fb8252",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4ebdf70a100ac697e45999b089b976d55eb26b46bb560c4e41f9151f1cf86cc0": {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xb14eed7ac9979bc2fa2cc14d1e9febee95429ba5fe75592e950b38463b9edcf1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10506_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10523_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:241"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10511": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10498": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10523_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10506_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10523_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10511",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10506_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10498",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f8e726aa2a1691e86daa01972f0ca149028415424138f2c08b79a90a50045c8c": {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xf4519ffe9810c97ac2a5440d4783202eff101e914aed4fdf043a543cdc0d4a90",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e9fb8c95d9a8cd06f8fe0283dc0e88fc1613d586b54a1dfaee8ee321eb825dee": {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0xdee55bd9a7c8384ab71b8eb468ac653d3cc13b58cc6d5b0d77c3e40c7a155da7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a55582a3d846047c9db3628a3d22f39a5b38873572921c9eb7c9ff832a2a543f": {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0xed657722f2258359333cc05681d51a3b94a402b92cfbc64bc6d31aa8cbb30f5e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_typeUnitId2Id",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:159"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f2e639277f3745efd540f95b1f382df82f53d407552f4f7348debbeb996397e9": {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x03bddaecd45c49f7538131d2f8fe038a91aeb942a733c0cb1931ead2da65e008",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10361",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10361": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c58735c118249ba3bedcb6b0f3feb7363409821f40a57e33675e2fe8c09f511c": {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x30454b7a247eb43b1892304da36561c6df6bf90308eeb238b69db3bde67bdf80",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10360",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10360": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "39b96a19c7581c09b87686ab73a7699ae5aab1032a5a9790ee07e9f63e8a5054": {
      "address": "0xD0141E899a65C95a556fE2B27e5982A6DE7fDD7A",
      "txHash": "0xffef8a006ca55e96ca82bc18184cf13c7de6ca5b39a82e1d5e47d4c8beb6f350",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "61af581d320872397784aaf13e05483aa776f15353f4e7e45aeab929c41d9399": {
      "address": "0xAD523115cd35a8d4E60B3C0953E0E0ac10418309",
      "txHash": "0x0cd5e8545e3c58fbe12bac38a229dcf788660ab79b84c7cc12ae7029aa6ebcb3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:48"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:50"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:52"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10383",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:213"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10383": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a938febdc9f6afe62e407198c2f3d72081108eed240c4965186521f2be5fc87d": {
      "address": "0x413b1AfCa96a3df5A686d8BFBF93d30688a7f7D9",
      "txHash": "0x73d5d455448ce3b308a43afb07c0e3f55afb89a6455b36fcb89cb1d9b3d7523e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:213"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ba93890c4184e8e332a97c938bbadd0e4a48426f0e02db8fbbe16d4ea724a768": {
      "address": "0x821f3361D454cc98b7555221A06Be563a7E2E0A6",
      "txHash": "0x913e54a7571d943daa9e886884b579f0155a8b1ea578c38ec0cf40148660799b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d437897ba20714b7379c15e610cabe5f723328f3c0a444aba2d6668ad879f59e": {
      "address": "0x5133BBdfCCa3Eb4F739D599ee4eC45cBCD0E16c5",
      "txHash": "0xcb740b41e1d6a9ed49178a94cb1906f170f3cbb8bd882d108f06847da07fecf2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10533_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10550_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:241"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10538": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10525": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10550_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10533_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10550_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10538",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10533_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10525",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0d89bd91ac279fb1eb104c231ccc1be890dc4e5bddee4ef38357ca9dc2d425f0": {
      "address": "0x8F4ec854Dd12F1fe79500a1f53D0cbB30f9b6134",
      "txHash": "0x4c88636353479e8f0fd1f023adfb15d734bfdd28ca95bf1d5580fe634b766d55",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0c59b470347895a11ef4f656f2ce522cfb4a984af00631cefc42a2ac5bc5fc52": {
      "address": "0x12Bcb546bC60fF39F1Adfc7cE4605d5Bd6a6A876",
      "txHash": "0x584919a4210b94203d2b20ae13c64c343eee2b5a4630661664cdf043355e9b5b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "274d3a4072491325e96207c02a5435bd9f34f6fa4147b017f6d2cbe9f71f9565": {
      "address": "0x63fea6E447F120B8Faf85B53cdaD8348e645D80E",
      "txHash": "0x72068df01a28e6678ca0ee51fb163cc25eace63eaa653baf7663fd32fc12f3c4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_typeUnitId2Id",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:159"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1c8f8acb88ec1fa3a2ef04381b521a593eee163cc742c4873ac24c76c0b8ff4f": {
      "address": "0xaC9fCBA56E42d5960f813B9D0387F3D3bC003338",
      "txHash": "0x707f7af10fe255e9cbfce6015650e597deda19b2650338ce8952a4c680ce816e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10390",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10390": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e1f075dd22bda9f4ed56feb3a1bbf5b8ad705edfad7d43e08a61d4f13eb55363": {
      "address": "0xe1708FA6bb2844D5384613ef0846F9Bc1e8eC55E",
      "txHash": "0xb5a55ad67c30e02c603d62dbf1ba47acb81c94806c6d9bd24bf0750e9edcd9e4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10452",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10452": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "67e499ab400b8d7e6a3f0caa5d1bc1f9443f7a8347cee68bd15fec28d0852051": {
      "address": "0x8e264821AFa98DD104eEcfcfa7FD9f8D8B320adA",
      "txHash": "0x118b5a634cfc4f863b8b4e278410ea57cdb6fce3d74dc4c373f9963750219737",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10452",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10452": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ffc8b6230a7ab9cee7f886df8070aa2d3c6bdccb19ec4a1d1363314639574b26": {
      "address": "0x0c03eCB91Cb50835e560a7D52190EB1a5ffba797",
      "txHash": "0x86cb6ebb74a3977fa18db5642d3f92d2be73eb120036139f8e957c006050383e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:213"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10506",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:128"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10506": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "88c0e23183ed570f02709bad28d1a92d6f07fb4e2483416eefc728077ece907c": {
      "address": "0xa195ACcEB1945163160CD5703Ed43E4f78176a54",
      "txHash": "0x147b2d7836ca3cc5acc2a5ebe7bb85f02211356016e046cdea1ffe885b65d499",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:219"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0abb567666b4c0db616bdf8f1376b18bdf068d128f4463111c466e345b1b973d": {
      "address": "0x6F9679BdF5F180a139d01c598839a5df4860431b",
      "txHash": "0x1815cc9a168c49344cc2d9e107d3a34c06921308c91745dda8587f100cc8e085",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "aafecf5ed0223d65af3b712d45e3f16c7f350761f1337b045ad0d2aa7b05497f": {
      "address": "0x0bF7dE8d71820840063D4B8653Fd3F0618986faF",
      "txHash": "0x50eda805a763d59a21ab741ecab57e099b09d3ff79443928304e3e2acb748c7c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10704_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10721_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:241"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10709": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10696": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10721_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10704_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10721_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10709",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10704_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10696",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ad1f23f63039415ac23a7c2fb99a8c3c60b524b4ff6d13fa518b41277873f326": {
      "address": "0x5E5713a0d915701F464DEbb66015adD62B2e6AE9",
      "txHash": "0x826db193a32ddaaff9f447772c5519672607600c57eacef0dc8bf0cd2be55390",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "54c8305eaa0f8954c6f11aaa7cc4b3d0919ad3a2f1ba246c0fe036b40515dac9": {
      "address": "0x43cA9bAe8dF108684E5EAaA720C25e1b32B0A075",
      "txHash": "0x4b3d8afb72d6481ac71d4a8a1fcd68a6387c09cd1d657f552c1db1b235ba58fb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6992a56f7ec982b2af270de220da5469808d0a12f0e68ee62048b6e9aa2dad98": {
      "address": "0x59C4e2c6a6dC27c259D6d067a039c831e1ff4947",
      "txHash": "0xb62e9f5d255a0343eabdd532ca6f4ddb6b5bef145000b7ad1150b3f885e43464",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5e8a133acebfbdd40ced4b9372075e0685f58e803673b1f9008656d0d4f078ae": {
      "address": "0x687bB6c57915aa2529EfC7D2a26668855e022fAE",
      "txHash": "0x4ff190ece796259fd2d1a6e7600c18c402b9ad67718a93d0f2429d8541e1fe74",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_typeUnitId2Id",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:159"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a9e685a4cbd14f7f722af88f2878ae403675c0938f2a67d2d0d20b69d5196673": {
      "address": "0xAe2563b4315469bF6bdD41A6ea26157dE57Ed94e",
      "txHash": "0x45119fd50518d15aaf9fdc3c35d39bbc5552b7dce32494a51148cd53dabec1d5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10561",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10561": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "80ab64a4386f69fce1f3d813b1e1c9ae00af6e03345a694025cd4a7b26a9483a": {
      "address": "0x1B25157F05B25438441bF7CDe38A95A55ccf8E50",
      "txHash": "0x85010799235e08d8967510b91cba8408482f7b6585775a83cfc970979097b8af",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10517",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10517": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e09928a4aae65ec82c8bc108dbc9f57e20b168543cebf88e4dcb55c02f5142ef": {
      "address": "0x3489745eff9525CCC3d8c648102FE2cf3485e228",
      "txHash": "0x3e849c05e15c538dc034155b6f2ec69f67f6b95f6f765e859170f95e690aea6a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:218"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10547",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10547": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b4c3c6dddf096d28ccfc5fb7ffb7004464e4c66846c91f24ad16556ef171c591": {
      "address": "0xFCa5Bb3732185AE6AaFC65aD8C9A4fBFf21DbaaD",
      "txHash": "0x745a84bbe292cb872d2aac3bab465fc4e3ab8a19abf6d1a41c0d787171966aec",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10526",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10526": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "871e59240bd3a6059b0c5039cfbf1a69dd51820e3639cc7a5b257e534b2d8405": {
      "address": "0x1Dbbf529D78d6507B0dd71F6c02f41138d828990",
      "txHash": "0xc55250d1d76fc6ebcd7b01dc89423ae57032256ff3cbf70dc90ebcc3d34b1afc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10524",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10524": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "59d0f0eb0dbdee867ffafbe7a6e4ece7b5dc6fa70dbf3d46ef262a1b88293325": {
      "address": "0x0D92d35D311E54aB8EEA0394d7E773Fc5144491a",
      "txHash": "0x989e9f6706119e1de3af695983844e3f3544d76dccc5fdc722bcb84f70bfc064",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10534",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_id2ParameterNames",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_id2ParameterCount",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(Counter)2602_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "_typeUnitRate",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:39"
          },
          {
            "label": "_defaultId",
            "offset": 0,
            "slot": "513",
            "type": "t_uint256",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "514",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:173"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10534": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)2602_storage)": {
            "label": "mapping(uint256 => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "736e0c0a3d466ed738f70b4310771d29274c88630e03e9758e2a75d3bdce50fd": {
      "address": "0xFcCa971FE9Ee20C1Cf22596E700aA993D8fD19c5",
      "txHash": "0x47002618c7a289873950d036aca5b62b50319ec212060e691a887e7b0058b38c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10234",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:219"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10234": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4637336b832b3a796e5f01a0d46b387bea2c91e52f914638fa4efb25e3fe91c0": {
      "address": "0x273c507D8E21cDE039491B14647Fe9278D88e91D",
      "txHash": "0x7f0ab175b6b501c16bceb0f8a1d29d86c4e71b91737938db326cfd0ef8fd6d34",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10241",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:22"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:27"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:29"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10349_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:31"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10366_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:33"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:35"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:37"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:240"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10241": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10354": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10341": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10366_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10349_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10366_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10354",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10349_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10341",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f297dcfd5d4226d7968378cc19965ebde45f5bc759e6a396d6a6590895ba19e3": {
      "address": "0x8Aed6FE10dF3d6d981B101496C9c7245AE65cAEc",
      "txHash": "0xa239dd78bd2a94cc6caf21c7a208fd4767d59e92240961d7737a82d956f5c3f0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10234",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10234": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ca1ff2817daaf350b948e8d029e7d0ef96ed1b24ebd0d5273214fedd0040bb53": {
      "address": "0xBD2fe040D03EB1d1E5A151fbcc19A03333223019",
      "txHash": "0x55bbaffbace147369fc440727607904e58888f67c56757807c6b3ac4cb61081c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "668f2bf55b9ef523de2be260db86d12fb64adbf4ae0bf080174ec02aabc5bba2": {
      "address": "0xabebE9a2D62Af9a89E86EB208b51321e748640C3",
      "txHash": "0x8410ab20022a8057db67789f3b0fb2edc0cb5949c22f86a74ae79c35f9fc15ce",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10234",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_typeUnitRate",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_defaultId",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10234": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9c646f8ae7b053c2ccccc70160890741719e2ccc1f5385b914fe0787f56579b0": {
      "address": "0xbc71F5687CFD36f64Ae6B4549186EE3A6eE259a4",
      "txHash": "0x798db92132ff1286ab46166dc0e69782df5c60c8ac2003c2e902be227f40dcc7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10234",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10234": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0b9cb10f28d6e0cc3ee410266f064e2fc9689fca8563749477980cb5510205db": {
      "address": "0x645D817611E0CDaF9cD43332c4E369B9E333471d",
      "txHash": "0x46d7d1335c339aa4903de4fb9b8740e2508b947d331cd784bd574250793d69d7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10241",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10241": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9d165ca828a958ce96fa3622360d532fdc308c51afb99838f15b8acdcbeeb178": {
      "address": "0x0462Bc7390a33C8BB748d5c2ad76E93690A365c5",
      "txHash": "0xf51d50a178fcc8ccf34dc9992e798692f755b276080ca4c6b6c9c6dcddfab02a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10260",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10260": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10373": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10360": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10385_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10373",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10368_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10360",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "8103206eba79e917a356c89535649de9252ffe057cc317fff804ffe0b5a6521e": {
      "address": "0x71d2EBF08bF4FcB82dB5ddE46677263F4c534ef3",
      "txHash": "0xe58a25e0e1a400282bd16deaefa12d6ca81260d118f4dbe83e80f9a37c362f1e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10260",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10260": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10373": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10360": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10385_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10373",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10368_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10360",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5054a93e0e4b735fca2c1555b0b6093466f96c8a6601f8f6154a36d26f55965b": {
      "address": "0xd2983525E903Ef198d5dD0777712EB66680463bc",
      "txHash": "0xf1c7874ce90e4687271721d0771bc443266a2f5090460a3cbdfd74bf25825af7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10260",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10260": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10373": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10360": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10385_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10368_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10385_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10373",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10368_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10360",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1802091036934b361d718bd6128dd3a85005a6cf2714c557540e100e0126a53a": {
      "address": "0x8786A226918A4c6Cd7B3463ca200f156C964031f",
      "txHash": "0x402fda87807dc40e8c5f3591f0dbd69f681d7186f8d10e314220e6df6fbf0d7f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10278",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10386_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10403_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:250"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10278": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10391": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10378": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10403_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10386_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10403_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10391",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10386_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10378",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a13fd677fa724c9c0d7ada36d38d4f668bcdc921a18dbc29ee31771d01572c5d": {
      "address": "0xAAd4F7BB5FB661181D500829e60010043833a85B",
      "txHash": "0xeec158229367f9513bba3941a3467927695966e78febe607bd1816d2e81e0bc5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10277",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10385_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10402_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:250"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10277": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10390": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10377": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10402_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10385_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10402_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10390",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10385_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10377",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a4b34d8dc33389d94b202abb01436850143394f1781662741c13eeb93dc98a6d": {
      "address": "0x30A6d2B697635a0ECf1975d2386A0FE6b608B0Fb",
      "txHash": "0x6021f4f043052805a392c7de088d0ce110574910146e6a575171fcf04005b3d0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:43"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:44"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:47"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:214"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10275",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10383_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10400_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:250"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10275": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10388": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10375": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10400_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10383_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10400_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10388",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10383_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10375",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "73bf5e0d3d25e7f79185c6a229cacbbf3e84663dbe4358a0e0fe9ff177733475": {
      "address": "0xd8E4Af8145A8288537B85878bb2371fa070Aa5eF",
      "txHash": "0x78a58a5e303a9ddb204aa40ab8548cacc36d38f1d19084887ed1252060f07e88",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10322",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10430_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10447_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:252"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10322": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10435": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10422": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10447_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10430_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10447_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10435",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10430_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10422",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "af6527c9c6edf11ebf5d4a09a143641b377e7832603463d13d743166c48f51f4": {
      "address": "0x3576293Ba6Adacba1A81397db889558Dd91A8519",
      "txHash": "0x4bf9451ddd79645f5c4f4ac3284915e46167a9605172c7bcfb9fd5d63360fdc1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10322",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10430_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10447_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:252"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10322": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10435": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10422": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10447_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10430_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10447_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10435",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10430_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10422",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b65b043c02c9df59e5f7ece796bd6a11fb8ae89a5405e74d58407d795cd6c521": {
      "address": "0x492844c46CEf2d751433739fc3409B7A4a5ba9A7",
      "txHash": "0x0a8c0e33260406cfc42441d060bee5ab89f3aac6f7dfa4c94b49b2860fccb352",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10323",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10431_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10448_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:252"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10323": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10436": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10423": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10448_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10431_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10448_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10436",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10431_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10423",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "af01248e2418bc317db3830f7b11a7bb56ecb48e549584e66c5a5cebe6f10097": {
      "address": "0x810090f35DFA6B18b5EB59d298e2A2443a2811E2",
      "txHash": "0xccc405760ea177b2b1e270cae6bbf74eb6c36ff5ac51eb55f28d4ce4b508e289",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10323",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10431_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10448_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:252"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10323": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10436": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10423": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10448_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10431_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10448_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10436",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10431_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10423",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b19053729d28e94cfd508b2b9ce627a794922218de9f35a2551cc4046bafa272": {
      "address": "0x5147c5C1Cb5b5D3f56186C37a4bcFBb3Cd0bD5A7",
      "txHash": "0x6043e21677234c31a1e2a6e38917956bb6879eee2e32f644f941969b3783b3a1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10310",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:218"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10310": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7c85038f49d26b6fa858463ab1cd425707d3ef7f527ec13500ddcafa2b730c0a": {
      "address": "0xC3549920b94a795D75E6C003944943D552C46F97",
      "txHash": "0x5b9bbdb6b2ec3bc3c6c31835cceff137a02ee0f4156f931834d20580805db25b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10310",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10310": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b6f6aaaf79308b639b5f2f9ffea13b90108bcfba954e618042a10ca28ef8e91e": {
      "address": "0xbB57FE325e769DEDB1236525a91cDEd842143fA7",
      "txHash": "0xe6b46e1ae097fdaf622b4381c334d806ad24b345174e557994e70910932345cd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10310",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10310": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a95bf0dba447280ac9b042e08e99f60595cf20c03b59786c328762d299bfa6b8": {
      "address": "0x8659DF1C638CDA8E475CD3C6481730C2b4f85873",
      "txHash": "0x51fb1afffdd71c2213f4cc1c6d353ad1b31d5e8848e681ae11f9edb34bfffbbc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f2e42c56d70d2fc8720033f1f56a34b7e9377f2ba5144637179fb2231cffa5b6": {
      "address": "0x87E8f332f34984728Da4c0A008a495A5Ec4E09a2",
      "txHash": "0xa97c7e223a85b64e4bdf557453796820673e7c791918b236df5f931f0d9ce6dc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10310",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_typeUnitRate",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_defaultId",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10310": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "512f7089cd25aef21875d0ce1138e452a752862d6811bfc254aaaff04a20b2d2": {
      "address": "0x1E2e9190Cea3A97b5Aa85d9757117F499D31C47d",
      "txHash": "0xc5e59c900d365d8434c1eb83c0d8fd5b9c08d48735312f491bd9f2cbb64a6ec5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10310",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10310": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "20d771477459d5ab7cf1e619d9db39f0446801e948aff9ba294e4763512074b4": {
      "address": "0x9015957A2210BB8B10e27d8BBEEF8d9498f123eF",
      "txHash": "0xdc1693a9c516f3d73bfeb43c5832c027a12d0fce14c5cfb396839f35a1113ec2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10471",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10580_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10598_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:286"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10471": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10586": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10572": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10598_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10580_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10598_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10586",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10580_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10572",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1fc20ba4f24cf136bcb484d6ca1e7d5bf85c031da202769e860f9eb0a4e3afe5": {
      "address": "0x87a2688d6E41b23d802F74c6B1F06a8e8d118929",
      "txHash": "0xea9c9c656b130de0cdf9936c6c29bb65a5a8a85fe860f465f06d558c80b0f15b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10472",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10581_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10599_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:286"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10472": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10587": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10573": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10599_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10581_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10599_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10587",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10581_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10573",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "671603c6550b07d7b2ea4401fd822f450266f2041f7b7800ca6a71934c054f63": {
      "address": "0xA4f9885550548c6a45b9D18C57B114c06f3c39B8",
      "txHash": "0x61fc87074036d20161a5291dc30f384c8acfca3d98253ff4c6d759148e8ad128",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10538",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10538": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "28b89606106db4aefd0cbdebd4c3ede5ddf19f0291350f61dd5c4a7514de293b": {
      "address": "0x97915c43511f8cB4Fbe7Ea03B96EEe940eC4AF12",
      "txHash": "0x3f97045da84f247a8bcbef7dd2b17f2e88dc37372a0830fbac5c0a9b4d578a0a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10544",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10653_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10671_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:293"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10544": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10659": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10645": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10671_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10653_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10671_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10659",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10653_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10645",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "3119c4d90529d494c931fda25d2710e9d0ce7dc0d70b4b219ac11aec3e432915": {
      "address": "0xc565EB7363769f8ffAe0005285ccD854c631A0a0",
      "txHash": "0x69c774824630056f91eb1a5b78b01b5d2805abce6c0d8df8f4fab611641de50f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10552",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10661_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10679_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:296"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10552": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10667": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10653": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10679_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10661_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10679_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10667",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10661_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10653",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "baae84fd9f6ba849004002d19dd93a3af6b13c45f47e301a2e2ce11ac25f7d94": {
      "address": "0x7c77704007C9996Ee591C516f7319828BA49d91E",
      "txHash": "0xab1c958f613f499266fab781c4409931e0ac62f83eebdffd40d34b2e9a8cb7c2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10552",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10661_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10679_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:296"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10552": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10667": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10653": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10679_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10661_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10679_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10667",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10661_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10653",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7dcab7011b6498aa0e16b6e903ce7f293e9e4471d8350f56c1cb362818e76725": {
      "address": "0xF8b1d4d0A2Dd9Dd53200A4C6783a69c15E3a25F4",
      "txHash": "0x54247a6f5bb40e99b9d82e7c92ba458fc16ab1a2d610dfb0c378514b5a54d404",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4051_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10559",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10668_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10686_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:297"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10559": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10674": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10660": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10686_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10668_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4051_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10686_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10674",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10668_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10660",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fb59afdc643e7332e7f7a71a33efdb78db7110b8ae6a2c4775c6d4c8c2fc62ff": {
      "address": "0x10d16E2A026C4b5264A2aAC51cA65749cDf2037E",
      "txHash": "0xdf3fd75635bb8c7737c1038acf796b18db0c87cae153bcab0812da4571ab4c42",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10553",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10553": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "85718adb561a0c8b3910420579625c79815b09aee505fae57996890aa845b0ee": {
      "address": "0x9118EA4a52C6c7873729c8d8702cCd85E573f9E9",
      "txHash": "0x38f9db3e873feb473b7c2701139ab6a357ded02ddea619e22219a1f0694d39fc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10557",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10557": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a70a2946e720eeec9d974874f96a9c4fdd3e43c39e80a8b3bc43efb12a88edc8": {
      "address": "0x77e6Bd5c1988d8d766698F9CeEa5C24559b999f8",
      "txHash": "0x5bdf0897e7dc54f5db0e4e56e23cd8aaef7938545ecbbc377f847f14d5d804d1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10593",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10593": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "02ecf04f2327a23a1d0a7f166b02ea6a3b0ca9a326cdc5f5a7bb5590e8228b28": {
      "address": "0xca9507C5F707103e86B45DF4b35C37FE2700BB5B",
      "txHash": "0x5080e86ecf94ddaf4d51ca3fe550e786575419e58d4b31954415997e4695d839",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10685",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10685": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "caefb93769535b2aa9dc077ffb92c9190596265a716e08123ed4cf2e5b55d2c2": {
      "address": "0xDAb28073Fa01A171D2AF5707F3b7D2F065bE95dD",
      "txHash": "0x40aafefa23e94b9c02cc874d670a0773b80569ae9b2aefc0cee292304aa77faf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10712",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3758_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10712": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4546_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4546_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4546_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "29d007adb8e63439ff45fb30177f1d9ca082433cdb6109e26baf7fb1da5d896e": {
      "address": "0x94A44de106112A761B69dFBEB1ac6cfdD1B80304",
      "txHash": "0x39b502c8de68bf76242910fca4bd1fbc120785c3050924a9234c32ef3ed2164d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10720",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10829_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10847_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:297"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10720": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10835": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10821": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10847_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10829_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10847_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10835",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10829_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10821",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a101c8eeb86cb2217621f8e39cccfff45ab4d7f73977c8a5db4e80ce5d31cf74": {
      "address": "0xCD75Ddf910A204d36Fc2f86e776f9d7B97A34817",
      "txHash": "0x2e27789a44c78a89b22d1979941628a3056f86a3d383fe384657ac570345d2f6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10720",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3758_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10720": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4554_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "89eeafccc4ebc81ea0e6666f534d9865dc31040b1b73e70257d3c1d1b9699422": {
      "address": "0x656eef60fFA6c3b984E199d29443b885c51A6200",
      "txHash": "0x4da68ae0233e8da7decd5e7c7821b1dac5916037165f6ef01eef6bb0eae5b376",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3758_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4554_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
