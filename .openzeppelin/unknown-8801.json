{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xde15EACC0B5787f6C9F28FEBae0cc360F8a27977",
    "txHash": "0x95e2ed0a8dcaee84065abe72cd2c50c0ac80a3cf0622437d1d6f2bf64f400f53"
  },
  "proxies": [
    {
      "address": "0xe5D64C3E23304A8D9c2DFe0A6e428c545EA674bf",
      "txHash": "0x69ade38ed62a80e6d3800ac13c12bf8fb9ed9fcb6f4d284c70728f4e41098871",
      "kind": "transparent"
    },
    {
      "address": "0x2Ede9aaAE661Ba0FAaEb157992E8B4493A59591a",
      "txHash": "0x93ca012ec188fc875a7dfb9bf9e0574c321acf6e08f5f8fb99c05d6b6e5eba02",
      "kind": "transparent"
    },
    {
      "address": "0x3FABb87051FbE1C2CD7b4093F2b13f35122EdD92",
      "txHash": "0x9352e950bb343de35b12e9abdde5014a1212c3d4306a818a0416db3fe3683aba",
      "kind": "transparent"
    },
    {
      "address": "0x315f27B614E5c1906aF0c72aC4d697d4f80A947E",
      "txHash": "0x8bfe1d3e98bbfb7c8021f2ac921718e7cd9475b337ecf291408fbecbc1d0ba11",
      "kind": "transparent"
    },
    {
      "address": "0x2fbD2B1001032198ea1D71F4a201Cd7236be8bB4",
      "txHash": "0x9e50612bcb353a32f02bd9b79443d9729652ffe3b6722fb5308509d5b1d53259",
      "kind": "transparent"
    },
    {
      "address": "0x1c91eFB9F0F7b678ABC2a6c846ff0125a93332E0",
      "txHash": "0xcf6e750fb8fce652c411a13714099b7b2dd77f8b50d3ecdf7488526c5c2de15a",
      "kind": "transparent"
    },
    {
      "address": "0xccf640d27EbC46aDBEce9ECfA3A2a329eC313Fbb",
      "txHash": "0x9f0648c56007d16cce67948ab384d36bcbfbb0cce00095381f961ad92f4ad8c3",
      "kind": "transparent"
    },
    {
      "address": "0x63d88cDf91d17E37F60458293265c146B2A972f5",
      "txHash": "0xde4b606032d0b980e99afc70a82d7a8c86fed23ade5cbb75c8ef563339cf53a3",
      "kind": "transparent"
    },
    {
      "address": "0x3757B449d0286d91219e7F3430a14edF5e7d70bF",
      "txHash": "0x1584c3b52762918ad132e44c47fa28d19f40ea7d2eceb5343638a259dd062910",
      "kind": "transparent"
    },
    {
      "address": "0x8Ad5456F1486B98101E4e122D037DcdA3E93981c",
      "txHash": "0x38fde7c660d52a89df4e2187bf02f4f15282a50e4617aaa2d38d1b0c90c6b997",
      "kind": "transparent"
    },
    {
      "address": "0xAc973273bf3B0c8e83E17ea07176A843aa83F6e8",
      "txHash": "0xae8ab5b4d71f67ad75b41b460fa2f9862cd5e95a05115577764602d120435ab9",
      "kind": "transparent"
    },
    {
      "address": "0xD6901AdE7B6456d5efCF163Ec3b9871b7983f9de",
      "txHash": "0x333727aa658fd819a29ee010bb1a0a47e2224499436db7131025872f9f3dfcc4",
      "kind": "transparent"
    },
    {
      "address": "0x5f3a7eF62F9Ce27f093645Fd4ABAC9D1aAfD6b67",
      "txHash": "0x5c298a36ebc1efb5975d66906a0fd5ae0d80d43239f125407aadb31e6a0efbaf",
      "kind": "transparent"
    },
    {
      "address": "0x033532bE0cB15aC73E4517Eb9467eB6972eDA80e",
      "txHash": "0x78f741ad59e57884d1edd741eb54243da674e70be27c3aaa14a3e21f1e9e857c",
      "kind": "transparent"
    },
    {
      "address": "0xa1fa9cb9eCE2Fbd746d104a4039B493Dfd039d24",
      "txHash": "0xb3cc44371d91779bad5c885247417ac67f1d242d1427850ebd618eda93baa031",
      "kind": "transparent"
    },
    {
      "address": "0x097642492085b58D1D07c3CF2C39BeCD4373493A",
      "txHash": "0xa90cdc3c8676c77fe0d6f99ad28b2aa86c813db74526e70960de6155fda9daa2",
      "kind": "transparent"
    },
    {
      "address": "0xf9De70954E149C243218F2a27Cbc6bE2f8016fA1",
      "txHash": "0x48445da213e139b776a55276a1ce3fb0fd10158b724d31480462a63a44c6b3d1",
      "kind": "transparent"
    },
    {
      "address": "0x5B1362E6fD740129e4eaEC68c47cf7D3357d5Ab1",
      "txHash": "0x0ee0ecc762ed6836c0a35c39c2a85ffbff26bcbf5947323586a521b3467658ac",
      "kind": "transparent"
    },
    {
      "address": "0x1DF85dF5b8375AD8C0f6c23Bbf4710EfAC31ecf3",
      "txHash": "0xd292b3ea797a69092e2234993c793fae435dfd54efb734df5a70ccda46d8095d",
      "kind": "transparent"
    },
    {
      "address": "0x74D5c98A70dFCbDF076953Dd09C4C2852F101016",
      "txHash": "0xec787b6d5fedb9835b478b7c0309dbc60ad7734f55d2a291abbba8617ee8a71e",
      "kind": "transparent"
    },
    {
      "address": "0xfe1CF148ac8567A70E3E2499a37B2E3247AFF444",
      "txHash": "0x0b1d25130d6c1666d314f47e73742985555e1f448aac2dd06fb750bb7ffd3b75",
      "kind": "transparent"
    },
    {
      "address": "0xC79aD49125e57fBEe8418F22d92178c3Ee5d798d",
      "txHash": "0x171c1e7a008c8b4ecb0dca18d851be56f3899143f2ce103643de5cd24ffc1722",
      "kind": "transparent"
    },
    {
      "address": "0x7E9Ac321124b4ED2E8Eb64E57f9ec3e6525B6950",
      "txHash": "0x35867983cb76632504d62d12353eeb38a499183ae7f8e8753d3822a1ae0867a7",
      "kind": "transparent"
    },
    {
      "address": "0xC798b5d17E27857C3aF6E5a8Bf12b42dfAF22fFD",
      "txHash": "0x4ac23dff207f5f410f073e8bd8ea46feb20f735afac6c7ea7186d9be0990013e",
      "kind": "transparent"
    },
    {
      "address": "0x987baE510D231fb8800a6Ad88fA53b65c7EFC4F2",
      "txHash": "0x8634631604423f83fbb105c9f10798f4bf6445aea30db50c9c449dc6a970b803",
      "kind": "transparent"
    },
    {
      "address": "0x0B6D80b8B3E8470255FC93a07f0781ED704E5745",
      "txHash": "0x63cbb6407bac699ebce80954e75b7a186ace90dd9d48e86e86da5d0d40f064a8",
      "kind": "transparent"
    },
    {
      "address": "0xe7b6F6Eb2A32AedB152cc4bEc0B7286b7d02eb26",
      "txHash": "0xa6b995bcb60a1e906eca37b81eb7a09b1ed3b0e70dc63e55411c80b7379df6fb",
      "kind": "transparent"
    },
    {
      "address": "0x37AEf8Ee132eB737DDc1fEa9642Ab093182eE758",
      "txHash": "0xef42c24cd8a58059422432a52d13507d74f71128707333ff7c94f6aee37886ad",
      "kind": "transparent"
    },
    {
      "address": "0x1c8D84CC02B0cEa40E5DA2934778e0f51B66b60D",
      "txHash": "0xae8cb86292518d49eb6cf878f4d535ca48fae695b27aa58b63a1c60ef9f266cc",
      "kind": "transparent"
    }
  ],
  "impls": {
    "19c6ccdfe2283fb0ad024c5270001427d7808376fb5620156d5741ce5bd57498": {
      "address": "0x01E7AD6A0aE5256A448b4B02A7D858560B9E9Ba6",
      "txHash": "0xe14c1094c81cf806c9e31ef092a44f1d15ac62019d5024abd97099bef774ccdd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:18"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:19"
          },
          {
            "label": "_hosts",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:25"
          },
          {
            "label": "_exists",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:26"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:27"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:28"
          },
          {
            "label": "_count",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSDns",
            "src": "contracts/SCPNSDns.sol:135"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b19053729d28e94cfd508b2b9ce627a794922218de9f35a2551cc4046bafa272": {
      "address": "0x0b050bBfFd8A5401d6e48654D5C03Fe6b6e337CC",
      "txHash": "0xdad1a85a46d34d9daafdef9d1fd50f202acfd2f1daaba81f917bc7936404e321",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:218"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a9c21b134bfebfe9bb9961e39efbe2442c6cea4aa40373699a02f2b145587740": {
      "address": "0x334F869b752f9744258fCFa5556d9599cb31208c",
      "txHash": "0x7a2b4f618f2d715a30696098e180dd673696656dd4299dfeb7cd6815483a9ba6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4554_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "29d007adb8e63439ff45fb30177f1d9ca082433cdb6109e26baf7fb1da5d896e": {
      "address": "0x60131c8537A78342Fa13DE0C9B5EDBD2d9D79B32",
      "txHash": "0x2daae4105b7287d3a4493509c7dc07f7c78685c446a972fa018d22b3eb63dd23",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)10837_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)10855_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:297"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)10843": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)10829": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)10855_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)10837_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)10855_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)10843",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "result",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)10837_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)10829",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f607538ba940f2c6bfcf86d644afe76e44c07a7a39ff653270d864a5eb7bd81f": {
      "address": "0xEfe6038dE843f778519De578B8455Eaa3d56c38d",
      "txHash": "0xc7187421df436827ae25217762ec9f7649ac27ce0ac173992b43cc6d6285073f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4554_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6f8e07f4b47bb30fd8d86b2c4c2b7cc7d9df97fafd98f31f5e4dec97062cf8f2": {
      "address": "0xB849F3b45D38dC2fe7d6193DDDf65994314114E5",
      "txHash": "0x7459c052adb0095622f44d553e7a6ddbe0a8a959e411df04729a6225416568f9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:23"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:24"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:26"
          },
          {
            "label": "_lastBlockNumber",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:27"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:29"
          },
          {
            "label": "_senderIndex",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_struct(Counter)2602_storage)",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSNotes",
            "src": "contracts/SCPNSNotes.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2602_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a95bf0dba447280ac9b042e08e99f60595cf20c03b59786c328762d299bfa6b8": {
      "address": "0xdb083D376fe2D48Eeb6D239A589e95fAE9E4D126",
      "txHash": "0x651655b2f659924e4ee7fdaf245b9d5a4d37f58561b4d79daadb4479643a8a84",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSGpuList",
            "src": "contracts/SCPNSGpuList.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "89eeafccc4ebc81ea0e6666f534d9865dc31040b1b73e70257d3c1d1b9699422": {
      "address": "0xe7B0486447d3AEae60eF25502D894B94d90bE387",
      "txHash": "0xec67cc80ca8b9be3392d61fb7b110e772260104f563ef67c2264db5d32c9cd8c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3758_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4554_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4554_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4554_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f2e42c56d70d2fc8720033f1f56a34b7e9377f2ba5144637179fb2231cffa5b6": {
      "address": "0x2D537cb3bcF90e6D929D5527F116D3F72979abc4",
      "txHash": "0xc2b85a1cb61cd15c24abc3da9adfe290adb53688b8e5782f4237719a02f68eb0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_typeUnitRate",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_defaultId",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "512f7089cd25aef21875d0ce1138e452a752862d6811bfc254aaaff04a20b2d2": {
      "address": "0xffA4D49663d5b69f32bb416D4999ae8af0246205",
      "txHash": "0x5de30efb8740ef3458528cf5440d6353be678e8cd802bd02ba1be8b08012d510",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:28"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)10728",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:29"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)10728": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "98997ca8e8bd4115a8ae96df4a40aad6df063ce5cfc7afaec65a9590cc1f5fa8": {
      "address": "0xd6501754155F382E8999249e393088Fb0dF10ccd",
      "txHash": "0x2877b1b6ef911c6c57eabc3538e0dd89c34af47a21fec0d986cdcf3dc2cf5fd8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2Parameters",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:33"
          },
          {
            "label": "_typeUnitRate",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:35"
          },
          {
            "label": "_defaultId",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofParameter",
            "src": "contracts/SCPNSProofParameter.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b682a0320d799fe0c51b2a758a40e05547ddf390c6960a6528c662c245a6271e": {
      "address": "0x0BCeBD9238b24Aeb25CB3F40d71c94c88BdC741D",
      "txHash": "0x4062e51d01a3fd0a13e3a4b66acb247322ca6b2c841c307008ca41a20407dd58",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2TypeUnitId",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:46"
          },
          {
            "label": "_id2TypeUnitCount",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:48"
          },
          {
            "label": "_id2TypeUnitCountLocked",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:50"
          },
          {
            "label": "_typeUnit2Count",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:52"
          },
          {
            "label": "_ownedTypeUnitCount",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:54"
          },
          {
            "label": "_ownedTypeUnitCountLocked",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityUnit",
            "src": "contracts/SCPNSComputilityUnit.sol:218"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f585d4139f7f77a7ff3f57fb80cc486b73381c186bb43b416f61914b9ac98fc2": {
      "address": "0xB635f589fcA52f970A6BeDe805C97323D5cdF6C5",
      "txHash": "0x8866d95696e09e6f404d2127b44bd67ff3b68e9bd1c3deedb53e1396bd637f3e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:23"
          },
          {
            "label": "_tokenComputilityUnits",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:25"
          },
          {
            "label": "_lockLines",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSComputilityVM",
            "src": "contracts/SCPNSComputilityVM.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4587_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "38a123cfb6a640b12a54fea01821e0a0174c8a080815f778326693c4bad49ad3": {
      "address": "0xab3541415807c88d843Da7ee1C9bD17D1642068D",
      "txHash": "0x637b757c3fc72c1ae2d3815db8471462275f59d3faae5dd87185333f95cb3a2f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)11747_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)11765_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:302"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)11753": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)11739": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)11765_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)11747_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)11765_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "merkelRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)11753",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)11747_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)11739",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "074c05fa43c45aac543d56043a743c5d303d7bf2e9544b8c02cdd9e6f2403451": {
      "address": "0x37A094B31CE53807CFf8678A3B88A2Fdd6abe3F7",
      "txHash": "0x448bc61f4b880782763529d48ad4b20270ebcfdfea4a94b1e13fbbf57861a103",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:21"
          },
          {
            "label": "_deadlines",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:23"
          },
          {
            "label": "_tokenComputilityVMs",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSUseRightToken",
            "src": "contracts/SCPNSUseRightToken.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PairUint256)4587_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "903a53374b2de3b498d632ae4540dfa3f7ec31266589e43539cc658cf9e0814e": {
      "address": "0x6D457ce73030f6FF814fc5a6DB646F114D9A4982",
      "txHash": "0xb7c294d74fc65b68e1ad6815b39db38d2d676a0743e23ce6fd0c739c8024d04c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4587_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3758_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4587_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4587_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3758_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4587_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3758_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d25f10cf823b1decdc595243c14192f9131093ec2d822d94f308bf0092dcddde": {
      "address": "0x7E0fB10438a68Beb88c3b123DCb02608D41cC55b",
      "txHash": "0xe2cd7469169473d64ca01cdc7ece77bb2665d99bb1322e395a1fe7baf586fde3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4059_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11638",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:34"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:36"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:38"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11638": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3516_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3516_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3241_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4059_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3241_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1e573274e304a2a5bf43cf217061fa560fb7d58d3abc910416f343d82c59a354": {
      "address": "0x169Ad5f4062BFfC77829A4BB0b12C07bb0158b64",
      "txHash": "0x31b13bd7dc3a65abcd7ab42e5cbde45a61d22c452ffabc77aa0e60aa49f4640a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11779",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:32"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "510",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:34"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:36"
          },
          {
            "label": "_waitBlockNumber",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:38"
          },
          {
            "label": "_id2UseRightId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:41"
          },
          {
            "label": "_useRightId2Id",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:43"
          },
          {
            "label": "_id2VerifyParameter",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_struct(VerifyParameter)12171_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:45"
          },
          {
            "label": "_useRightId2VerifyStat",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_struct(VerifyStat)12178_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:47"
          },
          {
            "label": "_tokensSender",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:238"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11779": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(VerifyState)12146": {
            "label": "enum ISCPNSVerifyTask.VerifyState",
            "members": [
              "None",
              "Start",
              "Verify",
              "End",
              "Error"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyParameter)12171_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyStat)12178_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyStat)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VerifyParameter)12171_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyParameter",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proofId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "q",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "a",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "verifyBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(VerifyState)12146",
                "offset": 20,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(VerifyStat)12178_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyStat",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "succees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "failed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "846da0c85d24edf382dc65a282077888903bef4f4bb6a22d48da9315fbb1673a": {
      "address": "0x8c78f8D6A69Ed761B5CC3719F5e5E51Fd7d5A130",
      "txHash": "0x7abdf57f99ff6945bb46b9b2fa3a3d07a056bcee1db99012919f67c9543fca43",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:220"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11779",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)11888_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)11906_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:302"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11779": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)11894": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)11880": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)11906_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)11888_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)11906_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)11894",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)11888_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)11880",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d6c16bf9af2b0330984c390739fbc5788e81699b18bc4f3d6e9e48fb3b4f0937": {
      "address": "0xe94d2164A65AFc0fd09f9D39916990E1E241f015",
      "txHash": "0xef20c52d058b8962f6375c49b052f751587b774e0df7f40056816adaed5d746a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)11770",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3829_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11770": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4658_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "8df7bb4e18eac0ed2a3422430de1ba67197bbf277d13308c4bc5818ba11104a6": {
      "address": "0x01875d3EEB350070d36115C720D14865805e18c0",
      "txHash": "0xa3740499f0c367b7b16c44f59a6bf0e8d7703b10ae434794607f8445e3828c25",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)11764",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3829_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11764": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4658_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "44a5ddfd49a5b9419f13f687098040ce928ccd7074fdb14f2194752cd3eee2aa": {
      "address": "0xb94fDc3Bb02361eC82E11843c4b26043081aBa24",
      "txHash": "0x56bb2624989513a2b83df395997c2a3b3ba332560406ec6fd397785fe927f473",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)11783",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3829_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          },
          {
            "label": "__pricision",
            "offset": 0,
            "slot": "267",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11783": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4658_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "23e12ef8e62aa09fb7b0098ca9ccffb451d90c8d8eb1a857c6518a0079f4a28d": {
      "address": "0xA85863E574F9Cc34ED5247624F0439993dc03Cc1",
      "txHash": "0xbe86f4fe8331891bb9270aa6ab59cef940b77dbc11c0da9a207b6701488a2b40",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ISCPNSDns)11777",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:29"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:36"
          },
          {
            "label": "_id2PidTid",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:40"
          },
          {
            "label": "_id2ParameterIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:42"
          },
          {
            "label": "_id2Times",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:44"
          },
          {
            "label": "_id2PreBlockNumber",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:46"
          },
          {
            "label": "_id2ExcTime",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:48"
          },
          {
            "label": "_scales",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:50"
          },
          {
            "label": "_excTimeDistTables",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:52"
          },
          {
            "label": "_parameters",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Uint256s)3829_storage",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:54"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:56"
          },
          {
            "label": "__pricision",
            "offset": 0,
            "slot": "267",
            "type": "t_uint256",
            "contract": "SCPNSComputilityRanking",
            "src": "contracts/SCPNSComputilityRanking.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11777": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PairUint256)4658_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct PairValues.PairUint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PairUint256)4658_storage)": {
            "label": "mapping(uint256 => struct PairValues.PairUint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(uint256 => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairUint256)4658_storage": {
            "label": "struct PairValues.PairUint256",
            "members": [
              {
                "label": "_keys",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_keysIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_keysExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "dbefa33eccdab512bef0154b766034573a8351aab82ffeeed8aa10df1ecc881b": {
      "address": "0xC39c9f9f122012bd6e047484D03BE8A6b1Feb69B",
      "txHash": "0x8e8f438590f4f2e9a727f5141891a90f00a9fb9912305d7dddacab5b33db6a56",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11791",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:32"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "510",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:34"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:36"
          },
          {
            "label": "_waitBlockNumber",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:38"
          },
          {
            "label": "_id2UseRightId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:41"
          },
          {
            "label": "_useRightId2Id",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:43"
          },
          {
            "label": "_id2VerifyParameter",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_struct(VerifyParameter)12183_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:45"
          },
          {
            "label": "_useRightId2VerifyStat",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_struct(VerifyStat)12190_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:47"
          },
          {
            "label": "_tokensSender",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:254"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11791": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(VerifyState)12158": {
            "label": "enum ISCPNSVerifyTask.VerifyState",
            "members": [
              "None",
              "Start",
              "Verify",
              "End",
              "Error"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyParameter)12183_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyStat)12190_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyStat)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VerifyParameter)12183_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyParameter",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proofId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "q",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "a",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "verifyBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(VerifyState)12158",
                "offset": 20,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(VerifyStat)12190_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyStat",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "succees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "failed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a2abdcf082dfb8910ca93862bdb9f66436a1121439685290e5a52806642ec3e3": {
      "address": "0x2F6a3B08F803237Fcb5090F895Fcb295870C7508",
      "txHash": "0xd63ff834474ecabed94198e5cda404f39c36e00be201d6f8fb7b5666c08fa472",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11800",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:32"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "510",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:34"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:36"
          },
          {
            "label": "_waitBlockNumber",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:38"
          },
          {
            "label": "_id2UseRightId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:41"
          },
          {
            "label": "_useRightId2Id",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:43"
          },
          {
            "label": "_id2VerifyParameter",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_struct(VerifyParameter)12192_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:45"
          },
          {
            "label": "_useRightId2VerifyStat",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_struct(VerifyStat)12199_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:47"
          },
          {
            "label": "_tokensSender",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:255"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11800": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(VerifyState)12167": {
            "label": "enum ISCPNSVerifyTask.VerifyState",
            "members": [
              "None",
              "Start",
              "Verify",
              "End",
              "Error"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyParameter)12192_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyStat)12199_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyStat)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VerifyParameter)12192_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyParameter",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proofId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "q",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "a",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "verifyBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(VerifyState)12167",
                "offset": 20,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(VerifyStat)12199_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyStat",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "succees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "failed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b621161c7441134736dcb368c2b54043911956809d99adf6e71a26ccef3e4adb": {
      "address": "0x002B867C9f4d142590d9E8eF14B302830fCaf9e1",
      "txHash": "0xa58211a33c8708a075af8b02678aedabe8d5cb015ffad0cf25ea2e792e4f947b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11845",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:39"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:129"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11845": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ef18508bb01bd98164974cefff53f51f1d4f2f5b8448b1adfbfdf393f707102e": {
      "address": "0xeCC7968392E8BFbE25fB338e7eE5C9392D2A10ED",
      "txHash": "0x84462e8fd5c9ec1e742513cc1be96f509e5561ecb63aa8888830c693672aaf8c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11839",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:39"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:129"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11839": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a1995912ef51e6eaad62e7795e3fff5ededdbf1a545a47dc1d4374cabcd3b89d": {
      "address": "0xDE86cc67a935b7Bb60B3B7f050d41E7c3Fc180Ef",
      "txHash": "0x27fa53cad4e62f31dafc2552250b940e0973c7d8e39722abaed92991e7e5abb4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11817",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:39"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:129"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11817": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "323cc6b1de7b487ccb4dfcd329f8340d5f7c70a7e3bb7bdc3d6d38c646ae9d85": {
      "address": "0x27BE738896fB06441B09Eb62992e3973d141355b",
      "txHash": "0xf1781f264f0a17f5bf408d6634a1a9f129547b30158ef7c76dc9d1fd945f8f2f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11850",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:39"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11850": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "bbc91701a1a094c320c50a83fb3502c35aa0a4ff3eeddd8a4d55c69472db0e64": {
      "address": "0xAA6Fe4ad6532B28894C1E5D2aC5008adf4A23BDd",
      "txHash": "0x410d9c8f9adbf29b050c3462f4e4030a6f5def6f7a4ec45bf2f5267c8ba051c7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)11880",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_id2UnitIds",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:35"
          },
          {
            "label": "_unitId2UnitAddr",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:37"
          },
          {
            "label": "_validUnitTypes",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:39"
          },
          {
            "label": "_allUnitTypes",
            "offset": 0,
            "slot": "512",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "513",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSTypeUnit",
            "src": "contracts/SCPNSTypeUnit.sol:136"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)11880": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4c1422a3d148d55f876983c6957df0a4868c25d53617d6e639b55463fefadd7f": {
      "address": "0xab48E9a9b23121c9BaD9C14ED123255A952f3346",
      "txHash": "0xb1d129156cde6946670cc69d5ae31db1c0f6a14fdca7fa835c62f118a6b5427c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)12029",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "keepTaskCountOfUseRightId",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:25"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:28"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:30"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "512",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:32"
          },
          {
            "label": "_id2TaskParameter",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_struct(TaskParameter)12138_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:34"
          },
          {
            "label": "_id2TaskDetail",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_struct(TaskDetail)12158_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:36"
          },
          {
            "label": "_id2useRightId",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:38"
          },
          {
            "label": "_useRightId2TaskIds",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:40"
          },
          {
            "label": "_id2Question",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:42"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "518",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "519",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSProofTask",
            "src": "contracts/SCPNSProofTask.sol:331"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)12029": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(TaskState)12144": {
            "label": "enum ISCPNSProofTask.TaskState",
            "members": [
              "None",
              "Start",
              "End",
              "Cancel",
              "ERROR"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TaskType)12130": {
            "label": "enum ISCPNSProofTask.TaskType",
            "members": [
              "None",
              "Manual",
              "Auto",
              "Type3",
              "Type4"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskDetail)12158_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskParameter)12138_storage)": {
            "label": "mapping(uint256 => struct ISCPNSProofTask.TaskParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskDetail)12158_storage": {
            "label": "struct ISCPNSProofTask.TaskDetail",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "state",
                "type": "t_enum(TaskState)12144",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useSha256",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(TaskParameter)12138_storage": {
            "label": "struct ISCPNSProofTask.TaskParameter",
            "members": [
              {
                "label": "parameterId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dynamicData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taskType",
                "type": "t_enum(TaskType)12130",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ca2dfe5cdd8e7825cce78e7e12406574abf4a7b1250f49d6855c835395f7eadd": {
      "address": "0x43e4c66B0CE284f695B4384145e7bE15edaf5A26",
      "txHash": "0x01f37fa6c23fd74da169f3cfdc426cb509986d31df994e4d3e62ec73692da881",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)12029",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:33"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "510",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:35"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:37"
          },
          {
            "label": "_waitBlockNumber",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:39"
          },
          {
            "label": "_id2UseRightId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:42"
          },
          {
            "label": "_useRightId2Id",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:44"
          },
          {
            "label": "_id2VerifyParameter",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_struct(VerifyParameter)12446_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:46"
          },
          {
            "label": "_useRightId2VerifyStat",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_struct(VerifyStat)12453_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:48"
          },
          {
            "label": "_tokensSender",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:264"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)12029": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(VerifyState)12421": {
            "label": "enum ISCPNSVerifyTask.VerifyState",
            "members": [
              "None",
              "Start",
              "Verify",
              "End",
              "Error"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyParameter)12446_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyStat)12453_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyStat)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VerifyParameter)12446_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyParameter",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proofId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "q",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "a",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "verifyBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(VerifyState)12421",
                "offset": 20,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(VerifyStat)12453_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyStat",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "succees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "failed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4c1ac059fb6bdd09d97ce710ffc35999f5a8692e9e7190494717c12b4de8bd4e": {
      "address": "0x3A9b94f3476e34e82D6B58e248bE2912B76a5445",
      "txHash": "0x6988875349117a9ed666eabdfbb2f8f71a3d50f97d6479e1ffbefd143c48215b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:38"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:45"
          },
          {
            "label": "__unitType",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:46"
          },
          {
            "label": "_tokenDatas",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:49"
          },
          {
            "label": "_name2IDs",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:51"
          },
          {
            "label": "_id2Names",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:53"
          },
          {
            "label": "_autoControllers",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(PairAddress)4130_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSBase",
            "src": "contracts/SCPNSBase.sol:226"
          },
          {
            "label": "__dnsAddress",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:31"
          },
          {
            "label": "_dnsIf",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(ISCPNSDns)12045",
            "contract": "ContractProject",
            "src": "contracts/ContractProject.sol:32"
          },
          {
            "label": "_preBlockNumber",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:33"
          },
          {
            "label": "_eventIndex",
            "offset": 0,
            "slot": "510",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:35"
          },
          {
            "label": "_idGenerator",
            "offset": 0,
            "slot": "511",
            "type": "t_struct(Counter)2602_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:37"
          },
          {
            "label": "_waitBlockNumber",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:39"
          },
          {
            "label": "_id2UseRightId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:42"
          },
          {
            "label": "_useRightId2Id",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:44"
          },
          {
            "label": "_id2VerifyParameter",
            "offset": 0,
            "slot": "515",
            "type": "t_mapping(t_uint256,t_struct(VerifyParameter)12462_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:46"
          },
          {
            "label": "_useRightId2VerifyStat",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_uint256,t_struct(VerifyStat)12469_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:48"
          },
          {
            "label": "_tokensSender",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_struct(Uint256s)3829_storage)",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "518",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SCPNSVerifyTask",
            "src": "contracts/SCPNSVerifyTask.sol:268"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISCPNSDns)12045": {
            "label": "contract ISCPNSDns",
            "numberOfBytes": "20"
          },
          "t_enum(VerifyState)12437": {
            "label": "enum ISCPNSVerifyTask.VerifyState",
            "members": [
              "None",
              "Start",
              "Verify",
              "End",
              "Error"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256s)3829_storage)": {
            "label": "mapping(address => struct ArrayUnit256.Uint256s)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyParameter)12462_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyParameter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VerifyStat)12469_storage)": {
            "label": "mapping(uint256 => struct ISCPNSVerifyTask.VerifyStat)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3312_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2602_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PairAddress)4130_storage": {
            "label": "struct ArrayAddresses.PairAddress",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3312_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Uint256s)3829_storage": {
            "label": "struct ArrayUnit256.Uint256s",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_valuesIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_valuesExists",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VerifyParameter)12462_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyParameter",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proofId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "q",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "a",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sa",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "verifyBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "proof",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(VerifyState)12437",
                "offset": 20,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(VerifyStat)12469_storage": {
            "label": "struct ISCPNSVerifyTask.VerifyStat",
            "members": [
              {
                "label": "total",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "succees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "failed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
